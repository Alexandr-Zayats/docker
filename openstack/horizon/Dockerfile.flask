FROM alpine:3.7

ARG depends="py-pip openssl"
ARG make_depends="build-base git libffi-dev linux-headers python-dev openssl-dev gcc \
        musl-dev \
        libxml2-dev \
        libxslt-dev \
        libffi-dev \
        openssl-dev \
        g++ \
        gfortran \
        build-base \
        freetype-dev \
        libpng-dev \
        openblas-dev"
ARG repository="https://git.openstack.org/openstack/horizon"
ARG tag="stable/queens"

ENV HORIZON_BASEDIR=/opt/horizon \
    KEYSTONE_URL='http://keystone:5000/v3' \
    APACHE_RUN_USER=www-data \
    APACHE_RUN_GROUP=www-data \
    APACHE_PID_FILE=/var/run/apache2/apache2.pid \
    APACHE_RUN_DIR=/var/run/apache2 \
    APACHE_LOCK_DIR=/var/lock/apache2 \
    APACHE_LOG_DIR=/var/log/apache2
#    LANG=C 

#WORKDIR /opt/horizon
ADD requirements.txt /tmp/requirements.txt

#RUN echo "http://dl-8.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories \
RUN apk add --no-cache $depends \
    && apk add --no-cache $make_depends \
	&& mkdir /opt \
	&& cd /opt \
    && git clone $repository -b $tag --depth=1 \
	&& cd horizon \
    && pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir . \
	&& pip install --no-cache-dir uwsgi \
#	&& pip install --no-cache-dir -r /tmp/requirements.txt \
		Flask==0.12 \
		flask-appconfig==0.11.1 \
		Flask-Bootstrap==3.3.7.1 \
		Flask-Debug==0.4.3 \
		flask-nav==0.6 \
		Flask-ini==0.2.1 \
		Flask-WTF==0.14.2 \
		Jinja2==2.7.3 \
		Mako==1.0.0 \
		MarkupSafe==0.23 \
		SQLAlchemy==0.9.8 \
		WTForms==2.0.1 \
		Werkzeug==0.9.6 \
		alembic==0.6.7 \
		argparse==1.2.1 \
		blinker==1.3 \
		gunicorn==19.1.1 \
		itsdangerous==0.24 \
		requests==2.4.3 \
		wsgiref==0.1.2 \
		psycopg2==2.5.1 \
		\
#	&& addgroup -S www-data \
#    && adduser -D -S -h /opt/horizon -s /sbin/nologin -G www-data www-data \
	\
	&& cp openstack_dashboard/local/local_settings.py.example openstack_dashboard/local/local_settings.py \
    && sed -i 's/^DEBUG.*/DEBUG = False/g' $HORIZON_BASEDIR/openstack_dashboard/local/local_settings.py \
  	&& echo 'COMPRESS_OFFLINE = True' >> $HORIZON_BASEDIR/openstack_dashboard/local/local_settings.py \
    && sed -i 's/^OPENSTACK_KEYSTONE_URL.*/OPENSTACK_KEYSTONE_URL = os\.environ\["KEYSTONE_URL"\]/g' \
       $HORIZON_BASEDIR/openstack_dashboard/local/local_settings.py \
    && printf  "\nALLOWED_HOSTS = ['*', ]\n" >> $HORIZON_BASEDIR/openstack_dashboard/local/local_settings.py \
    && ./manage.py collectstatic --noinput \
    && ./manage.py compress --force \
    && ./manage.py make_web_conf --wsgi \
#    && ./manage.py make_web_conf --apache > /etc/apache2/conf.d/horizon.conf \
#    && sed -i 's/<VirtualHost \*.*/<VirtualHost _default_:80>/g' /etc/apache2/conf.d/horizon.conf \
#    && chown -R www-data:www-data ${HORIZON_BASEDIR} \
    && python -m compileall $HORIZON_BASEDIR \
#    && sed -i '/ErrorLog/c\    ErrorLog \/dev\/stderr' /etc/apache2/conf.d/horizon.conf \
#    && sed -i '/CustomLog/c\    CustomLog \/dev\/stdout combined' /etc/apache2/conf.d/horizon.conf \
#    && sed -i '/ErrorLog/c\    ErrorLog \/dev\/stderr' /etc/apache2/httpd.conf \
#	&& mkdir /run/apache2 \
	&& ln -s /opt/horizon/static /static \
	&& apk del --no-cache $make_depends

EXPOSE 80
#CMD /usr/sbin/httpd -DFOREGROUND

CMD uwsgi --http :80 --wsgi-file /opt/horizon/openstack_dashboard/wsgi/horizon.wsgi
