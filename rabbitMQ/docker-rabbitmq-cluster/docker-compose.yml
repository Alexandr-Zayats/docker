version: '3.5'

services:
  management:
    image: registry.ciklum.net/rabbitmq/rabbit:3.5
    hostname: management
    environment:
      RABBITMQ_ERLANG_COOKIE: abcdefg
      RABBITMQ_DEFAULT_USER: arvi
      RABBITMQ_DEFAULT_PASS: arvini12
#    ports:
#      - "5672:5672"
#      - "15672:15672"
    deploy:
      replicas: 1
      placement:
        constraints: [node.labels.rabbit == true]
      restart_policy:
        delay: 10s
        max_attempts: 10
        window: 60s
      labels:
        traefik.port: 15672
        traefik.enable: 'true'
        traefik.docker.network: 'lb_multi-host-network'
        traefik.frontend.rule: "Host:manager.rabbit.pa.pp.ciklum.com"
        traefik.backend.loadbalancer.swarm: 'true'
      update_config:
        parallelism: 2
        delay: 10s
    networks:
      rabbit:
      lb_multi-host-network:

  node:
    image: registry.ciklum.net/rabbitmq/rabbit:3.5
#    hostname: node
    depends_on:
      - management
    environment:
      RABBITMQ_ERLANG_COOKIE: abcdefg
      CLUSTER_WITH: management
      ENABLE_RAM: 'true'
      RABBITMQ_DEFAULT_USER: arvi
      RABBITMQ_DEFAULT_PASS: arvini12
#    ports:
#      - "5673:5672"
#      - "15673:15672"
    deploy:
      replicas: 2
      placement:
        constraints: [node.labels.rabbit == true]
      restart_policy:
        delay: 10s
        max_attempts: 10
        window: 60s
      labels:
        traefik.port: 5672
        traefik.enable: 'true'
        traefik.docker.network: 'lb_multi-host-network'
        traefik.frontend.rule: "Host:rabbit.pa.pp.ciklum.com"
        traefik.backend.loadbalancer.swarm: 'true'
      update_config:
        parallelism: 2
        delay: 10s
    networks:
      rabbit:
      lb_multi-host-network:

networks:
  rabbit:
    driver: overlay
  lb_multi-host-network:
    external: true
