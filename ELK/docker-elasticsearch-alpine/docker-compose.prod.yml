version: "3.5"

services:
  #############################
  # ELASTICSEARCH MASTER NODE #
  #############################
  elastic-master:
    image: blacktop/elasticsearch
    command: master
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
#        order: start-first
      resources:
        limits:
          cpus: '2'
          memory: '4G'
        reservations:
          cpus: '0.5'
          memory: '1G'
      placement:
        constraints: [node.labels.elk == true]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 60s
    volumes:
      - data:/usr/share/elasticsearch/data
    networks:
      elk-cluster:

  ####################################
  # ELASTICSEARCH CLIENT/INGEST NODE #
  ####################################
  elasticsearch:
    image: blacktop/elasticsearch:kopf
    command: client
    depends_on:
     - elastic-master
    deploy:
      replicas: 1
      labels:
        traefik.port: 9200
        traefik.enable: 'true'
        traefik.docker.network: 'lb_multi-host-network'
        traefik.frontend.rule: "Host:elastic.int.pa.pp.ciklum.com"
        traefik.backend.loadbalancer.swarm: 'true'
      update_config:
        parallelism: 2
        delay: 10s
#        order: stop-first
      resources:
        limits:
          cpus: '2'
          memory: '4G'
        reservations:
          cpus: '0.5'
          memory: '1G'
      placement:
        constraints: [node.labels.elk == true]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 60s
    networks:
      elk-cluster: 

  ###########################
  # ELASTICSEARCH DATA NODE #
  ###########################
  data:
    image: blacktop/elasticsearch
    environment:
      ES_JAVA_OPTS: '-Xms2g -Xmx2g'
    command: data
    depends_on:
     - elastic-master
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
#        order: start-first
      resources:
        limits:
          cpus: '2'
          memory: '4G'
        reservations:
          cpus: '0.5'
          memory: '1G'
      placement:
        constraints: [node.labels.elk == true]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 60s

    volumes:
      - data:/usr/share/elasticsearch/data
    networks:
      elk-cluster:

  ###############
  # KIBANA NODE #
  ###############
  kibana:
    image: kibana
    ports:
      - "5601:5601"
    depends_on:
     - elasticsearch
    deploy:
      replicas: 1
      placement:
        constraints: [node.labels.elk == true]
      restart_policy:
        delay: 10s
        max_attempts: 10
        window: 60s
      labels:
        traefik.port: 5601
        traefik.enable: 'true'
        traefik.docker.network: 'lb_multi-host-network'
        traefik.frontend.rule: "Host:kibana.int.pa.pp.ciklum.com"
        traefik.backend.loadbalancer.swarm: 'true'
    networks:
#      lb_multi-host-network:
      elk-cluster:

#############################
# ELASTICSEARCH DATA VOLUME #
#############################
volumes:
  data:
################################
# ELASTICSEARCH BRIDGE NETWORK #
################################
networks:
  elk-cluster:
    driver: overlay

